{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Using a TryCatch node to catch an exception thrown within a section of a message flow",
            "shortDescription": "Learn how to use the TryCatch node to isolate exceptions which are thrown from different parts of a message flow.",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Knowledge Center",
           		"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.ace.home.doc/help_home.htm"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "TryCatch node"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to catch user exceptions and route them using the TryCatch node in a message flow."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial demonstrates a simple message flow that receives a JSON input message over HTTP. Depending on the data in the message, the flow will either throw a user exception in the Compute node which follows the HTTPInput, or allow the message to carry on through a TryCatch node before throwing an exception from a Throw node. Each branch of flow logic uses a separate Mapping node to construct a reply message which is sent back to the HTTP Requestor using the HTTPReply node. This flow layout demonstrates how a TryCatch node can be used to route the handling of user exceptions down separate branches in a flow. This can be helpful if you wish to write exception handling logic which is specific for particular kinds of exception as it avoids all exceptions flowing back to the Catch terminal of your input node."
                    },
                    {
                        "section": "The tutorial requires an ACE integration node owned server, or a standalone server."
                    },
                    {
                        "section": "In IBM App Connect Enterprise, an application is a container for all the resources that are required to create a solution. This tutorial provides an application to hold the message flow. There are no other pre-requisites needed by the scenario."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "Knowledge Center link to ",
						"description": "Developing integration solutions by using applications",
						"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, one project will be created in your workspace: An application named <span class='application'>ExampleTryCatch</span>."
                        },
                        {
                            "section": "<span class='application'>ExampleTryCatch</span> provides a single message flow named <span class='resource'>TryCatch</span> which receives data using an HTTPInput node. The next node in the flow is a Compute node which depending on the content of the input message will either throw a user exception, or pass the message on to the next node in the flow which is a TryCatch node. If the Compute node throws an exception then the message is returned to the HTTPInput node and sent down its Catch terminal.  Alternatively, the message is sent to the TryCatch node. The TryCatch node acts like a valve.  Initially, the input message is routed through the node unchanged to the Try terminal. If a downstream node throws an exception, like the Throw node in this example flow, the TryCatch node catches it and routes the original message to its Catch terminal. You can connect the Catch terminal to further nodes to provide error processing for the message after an exception. Each branch of flow logic uses a separate Mapping node to construct a reply message which is sent back to the HTTP Requestor using the HTTPReply node. This flow layout demonstrates how a TryCatch node can be used to route the handling of user exceptions down separate branches in a flow. This can be helpful if you wish to write exception handling logic which is specific for particular kinds of exception as it avoids all exceptions flowing back to the Catch terminal of your input node."						
						},						
                        {
			    			"section": "Once imported using the link on the right, the provided project is ready to be deployed and tested. To deploy, you can use a provided BAR file, as described on the Prepare tab."
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Developing integration solutions by using applications",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "Create an integration node and deploy the message flow",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": 
		     [
			  {
              "section":"Prepare the scenario by executing the following steps:",				
                "steps":
                {
                "type":"ordered",
                "details":
                  [                    					
					{ 
                      "details":"Create an integration node by starting an App Connect Enterprise command console and executing the following commands:<br><code><span class='cmdname'>mqsicreatebroker TESTNODE</span></code><br><code><span class='cmdname'>mqsistart TESTNODE</span></code><br><code><span class='cmdname'>mqsicreateexecutiongroup TESTNODE -e server</span></code>"
                    },					
					{ 
                      "details":"Back in the Toolkit, drag and drop deploy the provided BAR file named <span class='application'>TryCatch.bar</span> which you will find inside the <span class='application'>ExampleTryCatch</span> application."
                    }
                  ]
                }
              }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {
                                "section": "<h4>Use the Flow Exerciser to test the tutorial scenario",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Open <span class='resource'>TryCatch.msgflow</span>.",
                                        "substeps":{
                                        "type": "unordered",
                                        "details": 
								        [
                                        {
                                          "details": "Click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (when challenged you do not need to redeploy the flow again)."
                                        },   
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />."
                                        },
                                        {
                                            "details": "Two saved messages are provided.<br>The input message <span class='resource'>Input_UseCatchOnHTTPInput</span> contains this data:<br><span class='resource'>{\"Message\": \"Use catch terminal on HTTPInput node\"}</span><br>The input message <span class='resource'>Input_UseCatchOnTryCatch</span> contains this data:<br><span class='resource'>{\"Message\": \"Use catch terminal on TryCatch node\"}</span><br>Select one of the input messages and click Send and your message is sent to the HTTPInput node."
                				        },											
										{
                                            "details": "After you close the dialog, the path taken through the messageflow is highlighted. Try both input messages and note how the choice of data in the input message causes each flow branch to be executed."											
				                        }										
                                        ]
                                        }
                                    }
                                ]
                            }
                        },
			{
			    "section": "This tutorial has shown how to use the TryCatch node to isolate exceptions which are thrown from different parts of a message flow."
				}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "TryCatch node",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/ac04850_.htm",
							"type": "web"
                        },
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
